{"version":3,"sources":["assets/weather-icons/clear-day.svg","assets/weather-icons/clear-night.svg","assets/weather-icons/cloudy.svg","assets/weather-icons/fog.svg","assets/weather-icons/partly-cloudy-day.svg","assets/weather-icons/partly-cloudy-night.svg","assets/weather-icons/rain.svg","assets/weather-icons/sleet.svg","assets/weather-icons/snow.svg","assets/weather-icons/wind.svg","redux/theme/theme.selectors.js","components/custom-theme-provider/custom-theme-provider.jsx","components/side-menu-icon/side-menu-icon.styles.jsx","components/side-menu-icon/side-menu-icon.component.jsx","components/search-field/search-field.styles.jsx","redux/weather/weather.types.js","redux/weather/weather.actions.js","redux/weather/weather.selectors.js","components/search-field/search-field.component.jsx","components/switch-units/switch-units.styles.jsx","components/switch-units/switch-units.component.jsx","components/header/header.styles.jsx","components/header/header.component.jsx","components/arc-range-slider/arc-range-slider.styles.jsx","redux/utils.js","components/weather-icon/weather-icon.styles.jsx","components/weather-icon/weather-icon.component.jsx","components/arc-range-slider/arc-background.component.jsx","components/arc-range-slider/arc-range-slider.component.jsx","components/brief-details/brief-details.styles.jsx","components/brief-details/brief-details.component.jsx","components/details-slider/details-slider.styles.jsx","components/weather-summary/weather-summary.styles.jsx","components/weather-summary/weather-summary.component.jsx","components/weather-info-card/weather-info-card.styles.jsx","components/weather-info-card/weather-info-card.component.jsx","components/weather-cards-list/weather-cards-list.styles.jsx","components/weather-cards-list/weather-cards-list.component.jsx","components/detailed-info/detailed-info.styles.jsx","components/detailed-info-card/detailed-info-card.styles.jsx","components/detailed-info-card/detailed-info-card.component.jsx","components/detailed-info/detailed-info.component.jsx","components/details-slider/details-slider.component.jsx","pages/weather/weather.styles.jsx","pages/weather/weather.component.jsx","App.js","serviceWorker.js","redux/weather/weather.reducer.js","redux/theme/themes.data.js","redux/theme/theme.types.js","redux/theme/theme.reducer.js","redux/root.reducer.js","redux/theme/theme.actions.js","redux/weather/weather.sagas.js","redux/theme/theme.sagas.js","redux/root.saga.js","redux/store.js","index.js"],"names":["module","exports","selectCurrentTheme","createSelector","state","theme","currentTheme","mapStateToProps","createStructuredSelector","connect","children","props","IconContainer","styled","div","size","text","SideMenuIcon","xmlns","viewBox","d","SearchFieldForm","form","SearchInput","input","WeatherActionTypes","GET_WEATHER_START","GET_WEATHER_SUCCESS","GET_WEATHER_FAILURE","SET_WEATHER_UNITS","UPDATE_WEATHER_RANGE_PROGRESS","SET_CURRENT_SLIDER_TIME","SET_CURRENT_WEATHER","getWeatherStart","query","type","payload","getWeatherSuccess","data","getWeatherFailure","error","setCurrentSliderTime","time","selectWeather","weather","selectCurrentWeather","currently","selectPlaceName","placeName","selectUnits","forecast","flags","units","selectLastSearch","search","selectCurrentSummary","currentWeather","summary","selectDailyWeather","daily","selectHourlyWeather","hourly","selectTimezone","timezone","selectCurrentSliderTime","currentSliderTime","selectLowerBoundForSlider","dailyWeather","selectCurrentWeatherIcon","icon","selectCurrentWeatherBak","currentlyBak","dispatch","searchValue","useState","setQuery","useEffect","split","onSubmit","event","preventDefault","name","placeholder","spellCheck","value","onChange","target","SwitchUnitsContainer","fontSize","setWeatherUnits","onClick","HeaderContainer","SearchFieldContainer","TempSwitchContainer","Header","ArcRangeSliderContainer","arch","ArcBackgroundContainer","ArcSVGContainer","ArcBackgroundOverlay","base","formatTime","hours","formatString","format","utcToZonedTime","addHours","fromUnixTime","toUpperCase","roundAndFix","n","m","Math","pow","round","WeatherIconContainer","WeatherIconImage","img","currentIcon","iconName","showCurrentSliderTime","ICON_MAP","clearDay","clearNight","rain","sleet","wind","fog","snow","cloudy","partlyCloudyDay","partlyCloudyNight","src","alt","ArcBackground","width","height","id","clipPathUnits","fill","ArcRange","progress","windowScrollListener","windowResizeListener","timeline","draggable","initRange","lowerBound","newLowerBound","updateWeatherRangeProgress","bounds","minX","maxX","seekTo","weatherIcon","document","getElementById","style","position","pointerEvents","TweenMax","set","overflow","gsap","registerPlugin","Draggable","MotionPathPlugin","tl","TimelineMax","paused","from","ease","Linear","easeNone","to","motionPath","path","seek","create","trigger","throwProps","onDrag","Update","onThrowUpdate","abs","this","x","knob","getBoundingClientRect","left","top","y","updateWeatherIconPosition","scale","Number","EPSILON","updateWeatherIconSize","window","addEventListener","applyBounds","removeEventListener","version","r","React","Component","ConnectedArcRange","ArcRangeSlider","flexCenter","css","timeStyles","BriefDetailsContainer","MinTempContainer","TempContainer","MaxTempContainer","DownSVG","opacity","UpSVG","useTheme","temperatureMin","temperature","temperatureMax","SliderContainer","CustomSlider","Slider","SliderOverlay","bottomDetail","WeatherSummaryContainer","SummaryContainer","p","WeatherInfoCardContainer","WeatherDayText","span","WeatherTempText","WeatherInfoCard","temperatureHigh","temperatureLow","avgTemp","day","toLowerCase","WeatherCardsListContainer","WeatherCardsContainer","slice","map","index","key","DetailedInfoContainer","DetailedInfoCardContainer","DetailedInfoCardTitle","DetailedInfoCardSubTitle","DetailedInfoCard","title","subtitle","precipProbability","windSpeed","humidity","visibility","uvIndex","pressure","parseFloat","toFixed","DetailsSlider","activeIndex","setActiveIndex","staticActiveIndex","onSlideChange","auto","console","log","WeatherPageContainer","TopContainer","ArchContainer","BottomContainer","WeatherPage","App","lastSearch","className","Boolean","location","hostname","match","INITIAL_STATE","longitute","undefined","latitude","offset","weatherReducer","action","ThemeActionTypes","SET_CURRENT_THEME","themes","themeReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","setCurrentTheme","getWeather","updateWeatherAfterUnitsChange","updateWeatherOnRange","onGetWeather","onSetWeatherUnits","onUpdateWeatherRangeProgress","weatherSagas","findClosestHourlyWeather","hourlyWeather","reduce","a","b","BASE_URL","select","fetch","res","json","put","message","timeDiff","currentWeatherBak","call","closestMatch","valuesToUpdate","takeLatest","throttle","all","updateThemeAfterWeatherSuccess","onGetWeatherSuccess","themeSagas","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","logger","store","createStore","applyMiddleware","run","persistor","persistStore","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.45105916.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clear-day.adbe34b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.9c2a0d8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.8d0ca550.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.b742a618.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-day.0fd7cfa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-night.a871d3be.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.2ba6cde7.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.f9ec606e.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.c2418c49.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.332c9448.svg\";","import { createSelector } from 'reselect'\r\n\r\nconst selectTheme = state => state.theme\r\n\r\nexport const selectCurrentTheme = createSelector(\r\n  [selectTheme],\r\n  theme => theme.currentTheme\r\n)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { ThemeProvider } from 'styled-components'\r\n\r\nimport { selectCurrentTheme } from '../../redux/theme/theme.selectors'\r\n\r\nconst CustomThemeProvider = ({ children, theme, ...props }) => {\r\n  return (\r\n    <ThemeProvider theme={theme} {...props}>\r\n      {children}\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  theme: selectCurrentTheme\r\n})\r\n\r\nexport default connect(mapStateToProps)(CustomThemeProvider)\r\n","import styled from 'styled-components'\r\n\r\nexport const IconContainer = styled.div`\r\n  width: ${({ size }) => size}px;\r\n  height: ${({ size }) => size}px;\r\n  display: flex;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    stroke: ${({ theme }) => theme.text};\r\n    stroke-linecap: round;\r\n    stroke-miterlimit: 10;\r\n    stroke-width: 12px;\r\n    flex: 1 0;\r\n  }\r\n`\r\n","import React from 'react'\r\n\r\nimport { IconContainer } from './side-menu-icon.styles'\r\n\r\nconst SideMenuIcon = ({ size = 40 }) => {\r\n  return (\r\n    <IconContainer size={size} >\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 218.5 112.5\">\r\n        <path d=\"M6 6l207 1M6 56l163 1M6 106l118 1\" />\r\n      </svg>\r\n    </IconContainer>\r\n  )\r\n}\r\n\r\nexport default SideMenuIcon\r\n","import styled from 'styled-components'\r\n\r\nexport const SearchFieldForm = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n`\r\n\r\nexport const SearchInput = styled.input`\r\n  background: transparent;\r\n  border: none;\r\n  font-family: 'Montserrat', 'sans-serif';\r\n  font-weight: 300;\r\n  font-size: 2.2rem;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.text};\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  padding: 10px 10px;\r\n  box-sizing: border-box;\r\n  margin: auto;\r\n \r\n  :focus {\r\n    outline: none;\r\n    border: 1px solid transparent;\r\n    border-bottom: 1.2px solid ${({ theme }) => theme.text};\r\n\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.text};\r\n    opacity: 0.8;\r\n  }\r\n`\r\n","const WeatherActionTypes = {\r\n  GET_WEATHER_START: 'GET_WEATHER_START',\r\n  GET_WEATHER_SUCCESS: 'GET_WEATHER_SUCCESS',\r\n  GET_WEATHER_FAILURE: 'GET_WEATHER_FAILURE',\r\n  SET_WEATHER_UNITS: 'SET_WEATHER_UNITS',\r\n  UPDATE_WEATHER_RANGE_PROGRESS: 'UPDATE_WEATHER_RANGE_PROGRESS',\r\n  SET_CURRENT_SLIDER_TIME: 'SET_CURRENT_SLIDER_TIME',\r\n  SET_CURRENT_WEATHER: 'SET_CURRENT_WEATHER'\r\n}\r\n\r\nexport default WeatherActionTypes\r\n","import WeatherActionTypes from './weather.types'\r\n\r\nexport const getWeatherStart = query => ({\r\n  type: WeatherActionTypes.GET_WEATHER_START,\r\n  payload: query\r\n})\r\n\r\nexport const getWeatherSuccess = data => ({\r\n  type: WeatherActionTypes.GET_WEATHER_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const getWeatherFailure = error => ({\r\n  type: WeatherActionTypes.GET_WEATHER_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const setWeatherUnits = units => ({\r\n  type: WeatherActionTypes.SET_WEATHER_UNITS,\r\n  payload: units\r\n})\r\n\r\nexport const updateWeatherRangeProgress = progress => ({\r\n  type: WeatherActionTypes.UPDATE_WEATHER_RANGE_PROGRESS,\r\n  payload: progress\r\n})\r\n\r\nexport const setCurrentSliderTime = time => ({\r\n  type: WeatherActionTypes.SET_CURRENT_SLIDER_TIME,\r\n  payload: time\r\n})\r\n\r\nexport const setCurrentWeather = weather => ({\r\n  type: WeatherActionTypes.SET_CURRENT_WEATHER,\r\n  payload: weather\r\n})\r\n","import { createSelector } from 'reselect'\r\n\r\nconst selectWeather = state => state.weather\r\n\r\nexport const selectCurrentWeather = createSelector(\r\n  [selectWeather],\r\n  weather => weather.currently\r\n)\r\n\r\nexport const selectWeatherError = createSelector(\r\n  [selectWeather],\r\n  weather => weather.error\r\n)\r\n\r\nexport const selectPlaceName = createSelector(\r\n  [selectWeather],\r\n  weather => weather.placeName\r\n)\r\n\r\nexport const selectForecast = createSelector(\r\n  [selectWeather],\r\n  weather => weather.forecast\r\n)\r\n\r\nexport const selectUnits = createSelector(\r\n  [selectWeather],\r\n  // on weather request object not local\r\n  weather => weather.flags.units\r\n)\r\n\r\nexport const selectLastSearch = createSelector(\r\n  [selectWeather],\r\n  weather => weather.search\r\n)\r\n\r\nexport const selectCurrentSummary = createSelector(\r\n  [selectCurrentWeather],\r\n  currentWeather =>\r\n    currentWeather ? currentWeather.summary : 'Summary not available.'\r\n)\r\n\r\nexport const selectDailyWeather = createSelector([selectWeather], weather =>\r\n  weather.daily ? weather.daily.data : null\r\n)\r\n\r\nexport const selectHourlyWeather = createSelector([selectWeather], weather =>\r\n  weather.hourly ? weather.hourly.data : null\r\n)\r\n\r\nexport const selectTimezone = createSelector(\r\n  [selectWeather],\r\n  weather => weather.timezone\r\n)\r\n\r\nexport const selectCurrentSliderTime = createSelector(\r\n  [selectWeather],\r\n  weather => weather.currentSliderTime\r\n)\r\n\r\nexport const selectLowerBoundForSlider = createSelector(\r\n  [selectCurrentWeather, selectDailyWeather],\r\n  (currentWeather, dailyWeather) =>\r\n    currentWeather\r\n      ? (currentWeather.time - dailyWeather[0].time) /\r\n        (dailyWeather[2].time - dailyWeather[0].time)\r\n      : 0\r\n)\r\n\r\nexport const selectCurrentWeatherIcon = createSelector(\r\n  [selectCurrentWeather],\r\n  currentWeather => (currentWeather ? currentWeather.icon : 'clear-day')\r\n)\r\n\r\nexport const selectCurrentWeatherBak = createSelector(\r\n  [selectWeather],\r\n  weather => weather.currentlyBak\r\n)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\n\r\nimport { SearchFieldForm, SearchInput } from './search-field.styles'\r\n\r\nimport { getWeatherStart } from '../../redux/weather/weather.actions'\r\nimport { selectPlaceName } from '../../redux/weather/weather.selectors'\r\n\r\nconst SearchField = ({ searchValue = '', getWeatherStart, placeName }) => {\r\n  const [query, setQuery] = useState(searchValue)\r\n\r\n  useEffect(() => {\r\n    if (placeName) setQuery(placeName.split(',')[0])\r\n  }, [placeName])\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    getWeatherStart(query)\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <SearchFieldForm onSubmit={handleSubmit}>\r\n      <SearchInput\r\n        type=\"text\"\r\n        name=\"query\"\r\n        placeholder=\"Search\"\r\n        spellCheck=\"false\"\r\n        value={query}\r\n        onChange={handleChange}\r\n      />\r\n    </SearchFieldForm>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  placeName: selectPlaceName\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getWeatherStart: query => dispatch(getWeatherStart(query))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchField)\r\n","import styled from 'styled-components'\r\n\r\nexport const SwitchUnitsContainer = styled.div`\r\n  font-family: 'Montserrat', 'sans-serif';\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: ${({ fontSize }) => fontSize}px;\r\n  span {\r\n    margin: 0px 5px;\r\n    cursor: pointer;\r\n\r\n    :first-child {\r\n      font-weight: ${({ units }) => (units === 'si' ? 600 : 300)};\r\n    }\r\n\r\n    :last-child {\r\n      font-weight: ${({ units }) => (units === 'us' ? 600 : 300)};\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { SwitchUnitsContainer } from './switch-units.styles'\r\nimport { setWeatherUnits } from '../../redux/weather/weather.actions'\r\nimport { selectUnits } from '../../redux/weather/weather.selectors'\r\n\r\nconst SwitchUnits = ({ setWeatherUnits, units, fontSize = 20 }) => {\r\n  return (\r\n    <SwitchUnitsContainer units={units} fontSize={fontSize}>\r\n      <span onClick={() => setWeatherUnits('si')}>ºC</span>/\r\n      <span onClick={() => setWeatherUnits('us')}>ºF</span>\r\n    </SwitchUnitsContainer>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({ units: selectUnits })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setWeatherUnits: units => dispatch(setWeatherUnits(units))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SwitchUnits)\r\n","import styled from 'styled-components'\r\n\r\nexport const HeaderContainer = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-rows: repeat(5, 1fr);\r\n  grid-template-columns: 140px repeat(2, minmax(200px, auto)) 140px;\r\n`\r\n\r\nexport const IconContainer = styled.div`\r\n  grid-column: 1 / span 1;\r\n  grid-row: 1 / span 2;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n`\r\nexport const SearchFieldContainer = styled.div`\r\n  grid-column: 2 / span 2;\r\n  grid-row: 2 / span 3;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n`\r\n\r\nexport const TempSwitchContainer = styled.div`\r\n  grid-column: 4 / span 1;\r\n  grid-row: 1 / span 2;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-end;\r\n`\r\n","import React from 'react'\r\n\r\nimport SideMenuIcon from '../side-menu-icon/side-menu-icon.component'\r\nimport SearchField from '../search-field/search-field.component'\r\nimport SwitchUnits from '../switch-units/switch-units.component'\r\n\r\nimport {\r\n  HeaderContainer,\r\n  IconContainer,\r\n  SearchFieldContainer,\r\n  TempSwitchContainer\r\n} from './header.styles'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HeaderContainer>\r\n      <IconContainer>\r\n        <SideMenuIcon size={30} />\r\n      </IconContainer>\r\n\r\n      <SearchFieldContainer>\r\n        <SearchField />\r\n      </SearchFieldContainer>\r\n\r\n      <TempSwitchContainer>\r\n        <SwitchUnits fontSize={18} />\r\n      </TempSwitchContainer>\r\n    </HeaderContainer>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\n\r\nexport const ArcRangeSliderContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  position: relative;\r\n\r\n  /* for old ArcSVG */\r\n  svg {\r\n    /* position: absolute; */\r\n\r\n    &#range-arc {\r\n      position: absolute;\r\n      flex: 1 0;\r\n    }\r\n\r\n    &#main-arc {\r\n      flex: 1 0;\r\n      fill: ${({ theme }) => theme.arch};\r\n    }\r\n  }\r\n`\r\n\r\nexport const ArcBackgroundContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const ArcSVGContainer = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  display: flex;\r\n  background-color: ${({ theme }) => theme.arch};\r\n  svg {\r\n    flex: 1 0;\r\n  }\r\n`\r\n\r\nexport const ArcBackgroundOverlay = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  /* 1px line fix on certian resolution idk why  */\r\n  margin-top: -1px;\r\n  position: absolute;\r\n  background-color: ${({ theme }) => theme.base};\r\n  clip-path: url(#curveClipPath);\r\n`\r\n","import { format, addHours, fromUnixTime } from 'date-fns'\r\nimport { utcToZonedTime } from 'date-fns-tz'\r\n\r\nexport const formatTime = (\r\n  time,\r\n  { timezone = 'Asia/Kolkata', hours = 0, formatString = 'hh:mm b' } = {}\r\n) =>\r\n  format(\r\n    utcToZonedTime(addHours(fromUnixTime(time), hours), timezone),\r\n    formatString\r\n  ).toUpperCase()\r\n\r\nexport const roundAndFix = (n, d) => {\r\n  const m = Math.pow(10, d)\r\n  return Math.round(n * m) / m\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const WeatherIconContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  color: ${({ theme }) => theme.text};\r\n  font-family: 'Montserrat', 'sans-serif';\r\n  position: relative;\r\n  span {\r\n    position: absolute;\r\n    right: -20px;\r\n    top: -20px;\r\n    font-size: 0.9rem;\r\n    font-weight: 300;\r\n  }\r\n`\r\n\r\nexport const WeatherIconImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\n\r\nimport { formatTime } from '../../redux/utils'\r\n\r\nimport {\r\n  selectCurrentSliderTime,\r\n  selectTimezone,\r\n  selectCurrentWeatherIcon\r\n} from '../../redux/weather/weather.selectors'\r\n\r\nimport clearDay from '../../assets/weather-icons/clear-day.svg'\r\nimport clearNight from '../../assets/weather-icons/clear-night.svg'\r\nimport cloudy from '../../assets/weather-icons/cloudy.svg'\r\nimport fog from '../../assets/weather-icons/fog.svg'\r\nimport partlyCloudyDay from '../../assets/weather-icons/partly-cloudy-day.svg'\r\nimport partlyCloudyNight from '../../assets/weather-icons/partly-cloudy-night.svg'\r\nimport rain from '../../assets/weather-icons/rain.svg'\r\nimport sleet from '../../assets/weather-icons/sleet.svg'\r\nimport snow from '../../assets/weather-icons/snow.svg'\r\nimport wind from '../../assets/weather-icons/wind.svg'\r\n\r\nimport { WeatherIconContainer, WeatherIconImage } from './weather-icon.styles'\r\n\r\nconst WeatherIcon = ({\r\n  iconName,\r\n  showCurrentSliderTime,\r\n  currentSliderTime,\r\n  timezone,\r\n  currentIcon,\r\n  ...props\r\n}) => {\r\n  const ICON_MAP = {\r\n    'clear-day': clearDay,\r\n    'clear-night': clearNight,\r\n    rain,\r\n    sleet,\r\n    wind,\r\n    fog,\r\n    snow,\r\n    cloudy,\r\n    'partly-cloudy-day': partlyCloudyDay,\r\n    'partly-cloudy-night': partlyCloudyNight\r\n  }\r\n\r\n  return (\r\n    <WeatherIconContainer {...props}>\r\n      {showCurrentSliderTime ? (\r\n        <span>\r\n          {formatTime(currentSliderTime, { timezone, formatString: 'hh:mm b' })}\r\n        </span>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <WeatherIconImage\r\n        src={ICON_MAP[iconName] || ICON_MAP[currentIcon]}\r\n        alt=\"weather-icon\"\r\n      />\r\n    </WeatherIconContainer>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentSliderTime: selectCurrentSliderTime,\r\n  timezone: selectTimezone,\r\n  currentIcon: selectCurrentWeatherIcon\r\n})\r\n\r\nexport default connect(mapStateToProps)(WeatherIcon)\r\n","import React from 'react'\r\nimport {\r\n  ArcBackgroundContainer,\r\n  ArcSVGContainer,\r\n  ArcBackgroundOverlay\r\n} from './arc-range-slider.styles'\r\n\r\nconst ArcBackground = () => {\r\n  return (\r\n    <>\r\n      <svg width=\"0\" height=\"0\">\r\n        <defs>\r\n          <clipPath id=\"curveClipPath\" clipPathUnits=\"objectBoundingBox\">\r\n            <path\r\n              d=\"M 0,1\r\n              L 0,0\r\n              L 1,0\r\n              L 1,1\r\n              C .705 -0.315, 0.295 -0.315, 0 1\r\n              Z\"\r\n            />\r\n          </clipPath>\r\n        </defs>\r\n      </svg>\r\n\r\n      <ArcBackgroundContainer>\r\n        <ArcSVGContainer>\r\n          <svg\r\n            id=\"main-arc\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 414.5 30\"\r\n          >\r\n            <path d=\"M414 30C354 11 283 0 207 0S61 11 0 30z\" fill=\"none\" />\r\n          </svg>\r\n          <ArcBackgroundOverlay />\r\n        </ArcSVGContainer>\r\n      </ArcBackgroundContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ArcBackground\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\n\r\nimport Draggable from 'gsap/Draggable'\r\nimport MotionPathPlugin from 'gsap/MotionPathPlugin'\r\nimport { gsap, TweenMax, TimelineMax, Linear } from 'gsap'\r\n\r\nimport { ArcRangeSliderContainer } from './arc-range-slider.styles'\r\nimport WeatherIcon from '../weather-icon/weather-icon.component'\r\nimport ArcBackground from './arc-background.component'\r\n\r\nimport {\r\n  selectTimezone,\r\n  selectLowerBoundForSlider\r\n} from '../../redux/weather/weather.selectors'\r\n\r\nimport { updateWeatherRangeProgress } from '../../redux/weather/weather.actions'\r\n\r\nclass ArcRange extends React.Component {\r\n  state = {\r\n    progress: 0\r\n  }\r\n\r\n  windowScrollListener = null\r\n  windowResizeListener = null\r\n\r\n  timeline = null\r\n  draggable = null\r\n\r\n  initRange = lowerBound => {\r\n    const newLowerBound = lowerBound || 0\r\n\r\n    const { updateWeatherRangeProgress } = this.props\r\n    const bounds = { minX: 41.55 + newLowerBound * 331.5, maxX: 373.45 }\r\n    const seekTo = bounds.minX / 415.5\r\n\r\n    const weatherIcon = document.getElementById('range-weather-icon')\r\n    weatherIcon.style.position = 'fixed'\r\n    weatherIcon.style.pointerEvents = 'none'\r\n\r\n    TweenMax.set('svg', { overflow: 'visible' })\r\n\r\n    gsap.registerPlugin(Draggable)\r\n    gsap.registerPlugin(MotionPathPlugin)\r\n\r\n    var tl = new TimelineMax({ paused: true })\r\n      .from('#range-path', 1, { ease: Linear.easeNone })\r\n      .to(\r\n        '#range-knob',\r\n        1,\r\n        {\r\n          motionPath: {\r\n            type: 'quadratic',\r\n            path: '#range-path'\r\n          },\r\n          ease: Linear.easeNone\r\n        },\r\n        0\r\n      )\r\n      .seek(seekTo)\r\n\r\n    var draggable = Draggable.create('#range-knob', {\r\n      trigger: '#range-knob',\r\n      type: 'x',\r\n      throwProps: true,\r\n      bounds,\r\n      onDrag: Update,\r\n      onThrowUpdate: Update\r\n    })\r\n\r\n    function Update() {\r\n      const progress = Math.abs(this.x / 415.5)\r\n      tl.progress(progress)\r\n      updateWeatherIconPosition(progress)\r\n\r\n      const scale = 415.5 - bounds.minX - (415.5 - bounds.maxX)\r\n\r\n      updateWeatherRangeProgress(\r\n        Math.round(((this.x - this.minX) / scale + Number.EPSILON) * 100) / 100\r\n      )\r\n    }\r\n\r\n    function updateWeatherIconPosition() {\r\n      const knob = document.getElementById('range-knob').getBoundingClientRect()\r\n      weatherIcon.style.left = `${knob.x}px`\r\n      weatherIcon.style.top = `${knob.y}px`\r\n    }\r\n\r\n    return { tl, draggable }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { lowerBound } = this.props\r\n    const { tl, draggable } = this.initRange(lowerBound)\r\n    this.timeline = tl\r\n    this.draggable = draggable\r\n\r\n    this.windowResizeListener = window.addEventListener(\r\n      'resize',\r\n      this.updateWeatherIconSize\r\n    )\r\n    this.windowScrollListener = window.addEventListener(\r\n      'scroll',\r\n      this.updateWeatherIconPosition\r\n    )\r\n\r\n    this.updateWeatherIconSize()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { lowerBound } = this.props\r\n    const minX = 41.55 + lowerBound * 331.5\r\n    const seekTo = minX / 415.5\r\n    this.draggable[0].applyBounds({ minX, maxX: 373.45 })\r\n    if (this.timeline) this.timeline.seek(seekTo)\r\n    this.updateWeatherIconPosition()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.windowResizeListener)\r\n    window.removeEventListener('scroll', this.windowScrollListener)\r\n  }\r\n\r\n  updateWeatherIconSize = () => {\r\n    this.updateWeatherIconPosition()\r\n    const knob = document.getElementById('range-knob').getBoundingClientRect()\r\n    const weatherIcon = document.getElementById('range-weather-icon')\r\n    weatherIcon.style.width = `${knob.width}px`\r\n    weatherIcon.style.height = `${knob.height}px`\r\n  }\r\n\r\n  updateWeatherIconPosition = progress => {\r\n    const knob = document.getElementById('range-knob').getBoundingClientRect()\r\n    const weatherIcon = document.getElementById('range-weather-icon')\r\n    weatherIcon.style.left = `${knob.x}px`\r\n    weatherIcon.style.top = `${knob.y}px`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <svg\r\n          id=\"range-arc\"\r\n          viewBox=\"0 0 414.5 30\"\r\n          version=\"1.1\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path id=\"range-path\" d=\"M0 31a727 727 0 01414 0\" fill=\"none\" />\r\n\r\n          {/* update radius of knob to update size of icon as it dependent on it  */}\r\n          <circle id=\"range-knob\" r=\"25\" fill=\"transparent\" />\r\n        </svg>\r\n\r\n        <WeatherIcon id=\"range-weather-icon\" showCurrentSliderTime />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst ArcSVG = () => {\r\n  return (\r\n    <svg\r\n      id=\"main-arc\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 414.5 30\"\r\n    >\r\n      <path d=\"M414 30C354 11 283 0 207 0S61 11 0 30z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nconst ArcRangeSlider = () => {\r\n  return (\r\n    <ArcRangeSliderContainer>\r\n      {/* <ArcSVG /> */}\r\n      <ArcBackground />\r\n      <ConnectedArcRange />\r\n    </ArcRangeSliderContainer>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  timezone: selectTimezone,\r\n  lowerBound: selectLowerBoundForSlider\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateWeatherRangeProgress: progress =>\r\n    dispatch(updateWeatherRangeProgress(progress))\r\n})\r\n\r\nconst ConnectedArcRange = connect(mapStateToProps, mapDispatchToProps)(ArcRange)\r\n\r\nexport default ArcRangeSlider\r\n","import styled, { css } from 'styled-components'\r\n\r\nconst flexCenter = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst timeStyles = css`\r\n  color: ${({ theme }) => theme.text};\r\n  align-self: flex-start;\r\n  font-size: 0.9rem;\r\n  font-weight: 400;\r\n  padding: 20px;\r\n`\r\n\r\nexport const BriefDetailsContainer = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  font-family: 'Montserrat', 'sans-serif';\r\n  font-weight: 200;\r\n  display: grid;\r\n  grid-template-columns: auto 400px auto;\r\n  text-align: center;\r\n  height: 100%;\r\n  p {\r\n    margin-left: 10px;\r\n  }\r\n`\r\n\r\nexport const MinTempContainer = styled.div`\r\n  font-size: 2.4rem;\r\n  text-align: center;\r\n  ${flexCenter}\r\n  justify-content: flex-end;\r\n  box-sizing: border-box;\r\n  padding-right: 30px;\r\n  margin-top: 40px;\r\n\r\n  span {\r\n    ${timeStyles}\r\n    margin-right: auto;\r\n  }\r\n`\r\n\r\nexport const TempContainer = styled.div`\r\n  font-size: 8.2rem;\r\n  text-align: center;\r\n  ${flexCenter}\r\n  padding-left: 40px;\r\n  box-sizing: border-box;\r\n`\r\n\r\nexport const MaxTempContainer = styled.div`\r\n  font-size: 2.4rem;\r\n  ${flexCenter}\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  padding-left: 30px;\r\n  margin-top: 40px;\r\n\r\n  span {\r\n    ${timeStyles}\r\n    justify-self: flex-end;\r\n    margin-left: auto;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { useTheme } from 'styled-components'\r\nimport { formatTime, roundAndFix } from '../../redux/utils'\r\n\r\nimport {\r\n  selectCurrentWeather,\r\n  selectDailyWeather,\r\n  selectTimezone\r\n} from '../../redux/weather/weather.selectors'\r\n\r\nimport {\r\n  BriefDetailsContainer,\r\n  MinTempContainer,\r\n  TempContainer,\r\n  MaxTempContainer\r\n} from './brief-details.styles'\r\n\r\nconst DownSVG = ({ theme }) => {\r\n  return (\r\n    <svg\r\n      style={{ fill: theme.text, opacity: 0.8 }}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n    >\r\n      <path d=\"M0 7l3-2 9 9 9-9 3 2-12 13z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nconst UpSVG = ({ theme }) => {\r\n  return (\r\n    <svg\r\n      style={{ fill: theme.text, opacity: 0.8 }}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n    >\r\n      <path d=\"M0 17l3 3 9-10 9 10 3-3L12 5z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nconst BriefDetails = ({ dailyWeather, currentWeather, timezone }) => {\r\n  const theme = useTheme()\r\n\r\n  return dailyWeather ? (\r\n    <BriefDetailsContainer>\r\n      <MinTempContainer>\r\n        <span>\r\n          {formatTime(dailyWeather[0].time, { timezone, formatString: 'E eo' })}\r\n        </span>\r\n        <DownSVG theme={theme} />\r\n        <p>{roundAndFix(dailyWeather[0].temperatureMin, 1)}º</p>\r\n      </MinTempContainer>\r\n      <TempContainer>\r\n        <p>{roundAndFix(currentWeather.temperature, 1)}º</p>\r\n      </TempContainer>\r\n      <MaxTempContainer>\r\n        <UpSVG theme={theme} />\r\n        <p>{roundAndFix(dailyWeather[0].temperatureMax, 1)}º</p>\r\n        <span>\r\n          {formatTime(dailyWeather[2].time, { timezone, formatString: 'E eo' })}\r\n        </span>\r\n      </MaxTempContainer>\r\n    </BriefDetailsContainer>\r\n  ) : (\r\n    ''\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  dailyWeather: selectDailyWeather,\r\n  currentWeather: selectCurrentWeather,\r\n  timezone: selectTimezone\r\n})\r\n\r\nexport default connect(mapStateToProps)(BriefDetails)\r\n","import styled from 'styled-components'\r\n\r\nimport Slider from '@farbenmeer/react-spring-slider'\r\n\r\nexport const SliderContainer = styled.div`\r\n  height: 100%;\r\n  max-width: 900px;\r\n  margin: auto;\r\n  position: relative;\r\n`\r\n\r\nexport const CustomSlider = styled(Slider)``\r\n\r\nexport const SliderOverlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  /* box-shadow: inset 0px 0px 20px 20px ${({ theme }) =>\r\n    theme.bottomDetail}; */\r\n  cursor: pointer;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const WeatherSummaryContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport const SummaryContainer = styled.p`\r\n  font-family: 'Montserrat', 'sans-serif';\r\n  font-size: 1.6rem;\r\n  font-weight: 300;\r\n  color: ${({ theme }) => theme.text};\r\n`\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\n\r\nimport { selectCurrentSummary } from '../../redux/weather/weather.selectors'\r\n\r\nimport {\r\n  WeatherSummaryContainer,\r\n  SummaryContainer\r\n} from './weather-summary.styles'\r\n\r\nconst WeatherSummary = ({ summary }) => {\r\n  return (\r\n    <WeatherSummaryContainer>\r\n      <SummaryContainer>{summary}</SummaryContainer>\r\n    </WeatherSummaryContainer>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  summary: selectCurrentSummary\r\n})\r\n\r\nexport default connect(mapStateToProps)(WeatherSummary)\r\n","import styled, { css } from 'styled-components'\r\n\r\nconst flexCenter = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport const WeatherInfoCardContainer = styled.div`\r\n  place-self: center;\r\n  height: 150px;\r\n  color: ${({ theme }) => theme.text};\r\n  font-family: 'Montserrat', 'sans-serif';\r\n  font-weight: 300;\r\n  display: grid;\r\n  grid-template-rows: 1fr 2fr 1fr;\r\n  text-align: center;\r\n`\r\n\r\nexport const WeatherDayText = styled.span`\r\n  width: 100%;\r\n  font-size: 16px;\r\n`\r\n\r\nexport const WeatherIconContainer = styled.div`\r\n  ${flexCenter}\r\n  img {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n`\r\n\r\nexport const WeatherTempText = styled.span`\r\n  width: 100%;\r\n  font-size: 14px;\r\n`\r\n","import React from 'react'\r\nimport { formatTime, roundAndFix } from '../../redux/utils'\r\n\r\nimport WeatherIcon from '../weather-icon/weather-icon.component'\r\n\r\nimport {\r\n  WeatherInfoCardContainer,\r\n  WeatherDayText,\r\n  WeatherTempText,\r\n  WeatherIconContainer\r\n} from './weather-info-card.styles'\r\n\r\nconst WeatherInfoCard = props => {\r\n  const { temperatureHigh, temperatureLow, time, icon } = props\r\n  const avgTemp = (temperatureHigh + temperatureLow) / 2\r\n  const day = formatTime(time, { formatString: 'E' })\r\n  return (\r\n    <WeatherInfoCardContainer>\r\n      <WeatherDayText>{day.toLowerCase()}</WeatherDayText>\r\n\r\n      <WeatherIconContainer>\r\n        <WeatherIcon iconName={icon} />\r\n      </WeatherIconContainer>\r\n\r\n      <WeatherTempText>{roundAndFix(avgTemp, 1)}º</WeatherTempText>\r\n    </WeatherInfoCardContainer>\r\n  )\r\n}\r\n\r\nexport default WeatherInfoCard\r\n","import styled from 'styled-components'\r\n\r\nexport const WeatherCardsListContainer = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 20px;\r\n`\r\n\r\nexport const WeatherCardsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(70px, 1fr));\r\n  grid-column-gap: 20px;\r\n  width: 100%;\r\n`\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\n\r\nimport WeatherInfoCard from '../weather-info-card/weather-info-card.component'\r\n\r\nimport { selectDailyWeather } from '../../redux/weather/weather.selectors'\r\n\r\nimport {\r\n  WeatherCardsListContainer,\r\n  WeatherCardsContainer\r\n} from './weather-cards-list.styles'\r\n\r\nconst WeatherCardsList = ({ dailyWeather }) => {\r\n  return (\r\n    <WeatherCardsListContainer>\r\n      <WeatherCardsContainer>\r\n        {dailyWeather\r\n          ? dailyWeather\r\n              .slice(0, 7)\r\n              .map((weather, index) => (\r\n                <WeatherInfoCard key={index} {...weather} />\r\n              ))\r\n          : ''}\r\n      </WeatherCardsContainer>\r\n    </WeatherCardsListContainer>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  dailyWeather: selectDailyWeather\r\n})\r\n\r\nexport default connect(mapStateToProps)(WeatherCardsList)\r\n","import styled from 'styled-components'\r\n\r\nexport const DetailedInfoContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(2, 1fr);\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const DetailedInfoCardContainer = styled.div`\r\n  height: 100%;\r\n  width: 150px;\r\n  justify-self: center;\r\n  margin-right: 5%;\r\n  display: grid;\r\n  grid-template-rows: 60% 40%;\r\n  text-align: center;\r\n  font-family: 'Montserrat', 'sans-serif';\r\n  color: ${({ theme }) => theme.text};\r\n`\r\n\r\nexport const DetailedInfoCardTitle = styled.div`\r\n  margin: auto;\r\n  font-size: 21px;\r\n`\r\n\r\nexport const DetailedInfoCardSubTitle = styled.div`\r\n  margin-bottom: auto;\r\n  opacity: 0.8;\r\n`\r\n","import React from 'react'\r\n\r\nimport {\r\n  DetailedInfoCardContainer,\r\n  DetailedInfoCardTitle,\r\n  DetailedInfoCardSubTitle\r\n} from './detailed-info-card.styles'\r\n\r\nconst DetailedInfoCard = ({ title, subtitle }) => {\r\n  return (\r\n    <DetailedInfoCardContainer>\r\n      <DetailedInfoCardTitle>{title}</DetailedInfoCardTitle>\r\n      <DetailedInfoCardSubTitle>{subtitle}</DetailedInfoCardSubTitle>\r\n    </DetailedInfoCardContainer>\r\n  )\r\n}\r\n\r\nexport default DetailedInfoCard\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\n\r\nimport { DetailedInfoContainer } from './detailed-info.styles'\r\n\r\nimport DetailedInfoCard from '../detailed-info-card/detailed-info-card.component'\r\n\r\nimport {\r\n  selectCurrentWeather,\r\n  selectUnits\r\n} from '../../redux/weather/weather.selectors'\r\n\r\nconst DetailedInfo = ({\r\n  units,\r\n  currentWeather = {\r\n    precipProbability: '',\r\n    windSpeed: '',\r\n    humidity: '',\r\n    visibility: '',\r\n    uvIndex: '',\r\n    pressure: ''\r\n  }\r\n}) => {\r\n  const {\r\n    precipProbability,\r\n    windSpeed,\r\n    humidity,\r\n    visibility,\r\n    uvIndex,\r\n    pressure\r\n  } = currentWeather\r\n\r\n  return currentWeather ? (\r\n    <DetailedInfoContainer>\r\n      <DetailedInfoCard\r\n        title={`${Number.parseFloat(precipProbability * 100).toFixed(1)}%`}\r\n        subtitle=\"Chance of rain\"\r\n      />\r\n      <DetailedInfoCard\r\n        title={`${windSpeed} ${units === 'si' ? 'mps' : 'mph'}`}\r\n        subtitle=\"Wind\"\r\n      />\r\n      <DetailedInfoCard\r\n        title={`${Number.parseFloat(humidity * 100).toFixed(1)}%`}\r\n        subtitle=\"Humidity\"\r\n      />\r\n      <DetailedInfoCard\r\n        title={`${Number.parseFloat(visibility).toFixed(2)} ${\r\n          units === 'si' ? 'km' : visibility > 1 ? 'miles' : 'mile'\r\n        }`}\r\n        subtitle=\"Visibility\"\r\n      />\r\n      <DetailedInfoCard title={uvIndex} subtitle=\"UV Index\" />\r\n      <DetailedInfoCard\r\n        title={`${pressure} ${units === 'si' ? 'hPa' : 'mb'}`}\r\n        subtitle=\"Pressure\"\r\n      />\r\n    </DetailedInfoContainer>\r\n  ) : (\r\n    ''\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentWeather: selectCurrentWeather,\r\n  units: selectUnits\r\n})\r\n\r\nexport default connect(mapStateToProps)(DetailedInfo)\r\n","import React, { useState } from 'react'\r\n\r\nimport {\r\n  CustomSlider,\r\n  SliderOverlay,\r\n  SliderContainer\r\n} from './details-slider.styles'\r\n\r\nimport WeatherSummary from '../../components/weather-summary/weather-summary.component'\r\nimport WeatherCardsList from '../../components/weather-cards-list/weather-cards-list.component'\r\nimport DetailedInfo from '../../components/detailed-info/detailed-info.component'\r\n\r\nconst DetailsSlider = () => {\r\n  const [activeIndex, setActiveIndex] = useState(1)\r\n\r\n  let staticActiveIndex = 1\r\n\r\n  const handleNext = () => {\r\n    setActiveIndex(staticActiveIndex > 2 ? 0 : staticActiveIndex + 1)\r\n    console.log(staticActiveIndex)\r\n  }\r\n\r\n  return (\r\n    <SliderContainer>\r\n      <CustomSlider\r\n        activeIndex={activeIndex}\r\n        onSlideChange={index => (staticActiveIndex = index)}\r\n        auto={6000}\r\n      >\r\n        <WeatherSummary />\r\n        <WeatherCardsList />\r\n        <DetailedInfo />\r\n      </CustomSlider>\r\n\r\n      <SliderOverlay onClick={handleNext} />\r\n    </SliderContainer>\r\n  )\r\n}\r\n\r\nexport default DetailsSlider\r\n","import styled from 'styled-components'\r\n\r\nexport const WeatherPageContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${({ theme }) => theme.base};\r\n  display: grid;\r\n  grid-template-rows: minmax(150px, 25%) minmax(100px, 15%) minmax(200px, 35%) minmax(\r\n      150px,\r\n      25%\r\n    );\r\n`\r\n\r\nexport const TopContainer = styled.div`\r\n  background-color: transparent;\r\n`\r\n\r\nexport const ArchContainer = styled.div`\r\n  z-index: 1;\r\n`\r\n\r\nexport const BriefDetailsContainer = styled.div`\r\n  background-color: ${({ theme }) => theme.arch};\r\n`\r\n\r\nexport const BottomContainer = styled.div`\r\n  background-color: ${({ theme }) => theme.bottomDetail};\r\n`\r\n","import React from 'react'\r\n\r\nimport Header from '../../components/header/header.component'\r\nimport ArcRangeSlider from '../../components/arc-range-slider/arc-range-slider.component'\r\nimport BriefDetails from '../../components/brief-details/brief-details.component'\r\nimport DetailsSlider from '../../components/details-slider/details-slider.component'\r\n\r\nimport {\r\n  WeatherPageContainer,\r\n  TopContainer,\r\n  BriefDetailsContainer,\r\n  BottomContainer,\r\n  ArchContainer\r\n} from './weather.styles'\r\n\r\nconst WeatherPage = () => {\r\n  return (\r\n    <WeatherPageContainer>\r\n      <TopContainer>\r\n        <Header />\r\n      </TopContainer>\r\n      <ArchContainer>\r\n        <ArcRangeSlider />\r\n      </ArchContainer>\r\n      <BriefDetailsContainer>\r\n        <BriefDetails />\r\n      </BriefDetailsContainer>\r\n      <BottomContainer>\r\n        <DetailsSlider />\r\n      </BottomContainer>\r\n    </WeatherPageContainer>\r\n  )\r\n}\r\n\r\nexport default WeatherPage\r\n","import React from 'react'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { connect } from 'react-redux'\r\nimport './App.scss'\r\n\r\nimport WeatherPage from './pages/weather/weather.component'\r\n\r\nimport { getWeatherStart } from './redux/weather/weather.actions'\r\nimport { selectLastSearch } from './redux/weather/weather.selectors'\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    const { lastSearch, getWeatherStart } = this.props\r\n    // if (lastSearch) getWeatherStart(lastSearch)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <WeatherPage />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  lastSearch: selectLastSearch\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getWeatherStart: query => dispatch(getWeatherStart(query))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import WeatherActionTypes from './weather.types'\r\n\r\nconst INITIAL_STATE = {\r\n  longitute: undefined,\r\n  latitude: undefined,\r\n  placeName: undefined,\r\n  forecast: undefined,\r\n  timezone: undefined,\r\n  currently: undefined,\r\n  hourly: undefined,\r\n  daily: undefined,\r\n  flags: { units: 'si' },\r\n  offset: undefined,\r\n  search: undefined,\r\n  error: undefined,\r\n  currentSliderTime: 0\r\n}\r\n\r\nconst weatherReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case WeatherActionTypes.GET_WEATHER_SUCCESS:\r\n      console.log(state)\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        currentSliderTime: action.payload.currently.time,\r\n        // creating this so state can be restored to current weather when slider comes back to start\r\n        currentlyBak: action.payload.currently,\r\n        error: undefined\r\n      }\r\n    case WeatherActionTypes.GET_WEATHER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n    case WeatherActionTypes.SET_WEATHER_UNITS:\r\n      return {\r\n        ...state,\r\n        flags: { units: action.payload }\r\n      }\r\n    case WeatherActionTypes.SET_CURRENT_SLIDER_TIME:\r\n      return {\r\n        ...state,\r\n        currentSliderTime: action.payload\r\n      }\r\n    case WeatherActionTypes.SET_CURRENT_WEATHER:\r\n      return {\r\n        ...state,\r\n        currently: {\r\n          ...state.currently,\r\n          ...action.payload\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default weatherReducer\r\n","//-----THEMES-----//\r\n\r\nconst darkText = '#665858'\r\nconst lightText = '#D5D5D5'\r\n\r\n//--CLEAR DAY--//\r\nexport const clearDay = {\r\n  base: '#72FFE2',\r\n  arch: '#88EEF7',\r\n  bottomDetail: '#86E8F1',\r\n  text: darkText\r\n}\r\n\r\n//--CLEAR NIGHT--//\r\nexport const clearNight = {\r\n  base: '#6C8A84',\r\n  arch: '#6E6E6E',\r\n  bottomDetail: '#5D5E5E',\r\n  text: lightText\r\n}\r\n\r\n//--RAIN--//\r\nexport const rain = {\r\n  base: '#619BBE',\r\n  arch: '#53789E',\r\n  bottomDetail: '#395877',\r\n  text: lightText\r\n}\r\n\r\n//--SLEET--//\r\nexport const sleet = {\r\n  base: '#619BBE',\r\n  arch: '#53789E',\r\n  bottomDetail: '#395877',\r\n  text: lightText\r\n}\r\n\r\n//--WIND--//\r\nexport const wind = {\r\n  base: '#7EA1B2',\r\n  arch: '#62698B',\r\n  bottomDetail: '#207E8B',\r\n  text: lightText\r\n}\r\n\r\n//--FOG--//\r\nexport const fog = {\r\n  base: '#F4F7F0',\r\n  arch: '#F2EEE3',\r\n  bottomDetail: '#C9D7D8',\r\n  text: darkText\r\n}\r\n\r\n//--SNOW--//\r\nexport const snow = {\r\n  base: '#FFFFFF',\r\n  arch: '#C6EFFF',\r\n  bottomDetail: '#D1E3FF',\r\n  text: darkText\r\n}\r\n\r\n//--CLOUDY--//\r\nexport const cloudy = {\r\n  base: '#7EA1B2',\r\n  arch: '#62698B',\r\n  bottomDetail: '#207E8B',\r\n  text: lightText\r\n}\r\n\r\n//--PARTLY CLOUDY DAY--//\r\nexport const partlyCloudyDay = {\r\n  base: '#C6EEFF',\r\n  arch: '#A6DFFF',\r\n  bottomDetail: '#91D7FF',\r\n  text: darkText\r\n}\r\n\r\n//--PARTLY CLOUDY NIGHT--//\r\nexport const partlyCloudyNight = {\r\n  base: '#747484',\r\n  arch: '#3C3C4C',\r\n  bottomDetail: '#181834',\r\n  text: lightText\r\n}\r\n\r\n//--DEFAULT EXPORT--//\r\nexport default {\r\n  'clear-day': clearDay,\r\n  'clear-night': clearNight,\r\n  rain,\r\n  sleet,\r\n  wind,\r\n  fog,\r\n  snow,\r\n  cloudy,\r\n  'partly-cloudy-day': partlyCloudyDay,\r\n  'partly-cloudy-night': partlyCloudyNight\r\n}\r\n","const ThemeActionTypes = {\r\n  SET_CURRENT_THEME: 'SET_CURRENT_THEME'\r\n}\r\n\r\nexport default ThemeActionTypes\r\n","import themes from './themes.data'\r\n\r\nimport ThemeActionTypes from './theme.types'\r\n\r\nconst INITIAL_STATE = {\r\n  currentTheme: themes['clear-day']\r\n}\r\n\r\nconst themeReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ThemeActionTypes.SET_CURRENT_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: themes[action.payload] || themes['clear-day']\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default themeReducer\r\n","import { combineReducers } from 'redux'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport weatherReducer from './weather/weather.reducer'\r\nimport themeReducer from './theme/theme.reducer'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['weather', 'theme']\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  weather: weatherReducer,\r\n  theme: themeReducer\r\n})\r\n\r\nexport default persistReducer(persistConfig, rootReducer)\r\n","import ThemeActionTypes from './theme.types'\r\n\r\nexport const setCurrentTheme = theme => ({\r\n  type: ThemeActionTypes.SET_CURRENT_THEME,\r\n  payload: theme\r\n})\r\n","import {\r\n  takeLatest,\r\n  put,\r\n  call,\r\n  all,\r\n  select,\r\n  throttle\r\n} from 'redux-saga/effects'\r\n\r\nimport WeatherActionTypes from './weather.types'\r\nimport {\r\n  getWeatherSuccess,\r\n  getWeatherFailure,\r\n  getWeatherStart,\r\n  setCurrentSliderTime,\r\n  setCurrentWeather\r\n} from './weather.actions'\r\n\r\nimport {\r\n  selectUnits,\r\n  selectLastSearch,\r\n  selectCurrentWeather,\r\n  selectCurrentWeatherBak,\r\n  selectDailyWeather,\r\n  selectHourlyWeather\r\n} from './weather.selectors'\r\n\r\nimport { setCurrentTheme } from '../theme/theme.actions'\r\n\r\nconst findClosestHourlyWeather = (time, hourlyWeather) => {\r\n  const closest = hourlyWeather.reduce((a, b) => {\r\n    return Math.abs(b.time - time) < Math.abs(a.time - time) ? b : a\r\n  })\r\n\r\n  return closest\r\n}\r\n\r\nfunction* getWeather({ payload }) {\r\n  const BASE_URL = `https://tru-weather-api.herokuapp.com`\r\n  const units = yield select(selectUnits)\r\n  try {\r\n    const res = yield fetch(\r\n      `${BASE_URL}/weather?search=${payload}&units=${units}`\r\n    )\r\n    const data = yield res.json()\r\n\r\n    if (data.error) {\r\n      yield put(getWeatherFailure({ message: data.error }))\r\n      return\r\n    }\r\n\r\n    yield put(getWeatherSuccess(data))\r\n  } catch (error) {\r\n    yield put(getWeatherFailure(error))\r\n  }\r\n}\r\n\r\nfunction* updateWeatherAfterUnitsChange() {\r\n  const lastSearch = yield select(selectLastSearch)\r\n  if (lastSearch) yield put(getWeatherStart(lastSearch))\r\n}\r\n\r\nfunction* updateWeatherOnRange({ payload }) {\r\n  const currentWeather = yield select(selectCurrentWeather)\r\n  const dailyWeather = yield select(selectDailyWeather)\r\n  const timeDiff = dailyWeather[2].time - currentWeather.time\r\n\r\n  const time = currentWeather.time + timeDiff * payload\r\n  yield put(setCurrentSliderTime(time))\r\n\r\n  const hourlyWeather = yield select(selectHourlyWeather)\r\n  const currentWeatherBak = yield select(selectCurrentWeatherBak)\r\n  // adding current weather backup to hourly weather array\r\n  // so weather can be restored to current when slider comes back to start\r\n  const closestMatch = yield call(findClosestHourlyWeather, time, [\r\n    currentWeatherBak,\r\n    ...hourlyWeather\r\n  ])\r\n\r\n  const {\r\n    temperature,\r\n    summary,\r\n    icon,\r\n    humidity,\r\n    precipProbability,\r\n    windSpeed,\r\n    visibility,\r\n    uvIndex,\r\n    pressure\r\n  } = closestMatch\r\n\r\n  const valuesToUpdate = {\r\n    temperature,\r\n    summary,\r\n    icon,\r\n    humidity,\r\n    precipProbability,\r\n    windSpeed,\r\n    visibility,\r\n    uvIndex,\r\n    pressure\r\n  }\r\n\r\n  yield put(setCurrentWeather(valuesToUpdate))\r\n  yield put(setCurrentTheme(icon))\r\n}\r\n\r\nexport function* onGetWeather() {\r\n  yield takeLatest(WeatherActionTypes.GET_WEATHER_START, getWeather)\r\n}\r\n\r\nexport function* onSetWeatherUnits() {\r\n  yield takeLatest(\r\n    WeatherActionTypes.SET_WEATHER_UNITS,\r\n    updateWeatherAfterUnitsChange\r\n  )\r\n}\r\n\r\nexport function* onUpdateWeatherRangeProgress() {\r\n  yield throttle(\r\n    200,\r\n    WeatherActionTypes.UPDATE_WEATHER_RANGE_PROGRESS,\r\n    updateWeatherOnRange\r\n  )\r\n}\r\n\r\nexport default function* weatherSagas() {\r\n  yield all([\r\n    call(onGetWeather),\r\n    call(onSetWeatherUnits),\r\n    call(onUpdateWeatherRangeProgress)\r\n  ])\r\n}\r\n","import { takeLatest, put, all, call } from 'redux-saga/effects'\r\n\r\nimport WeatherActionTypes from '../weather/weather.types'\r\nimport { setCurrentTheme } from '../theme/theme.actions'\r\n\r\nfunction* updateThemeAfterWeatherSuccess({\r\n  payload: {\r\n    currently: { icon }\r\n  }\r\n}) {\r\n  yield put(setCurrentTheme(icon))\r\n}\r\n\r\nexport function* onGetWeatherSuccess() {\r\n  yield takeLatest(\r\n    WeatherActionTypes.GET_WEATHER_SUCCESS,\r\n    updateThemeAfterWeatherSuccess\r\n  )\r\n}\r\n\r\nexport default function* themeSagas() {\r\n  yield all([call(onGetWeatherSuccess)])\r\n}\r\n","import { all, call } from 'redux-saga/effects'\r\n\r\nimport weatherSagas from './weather/weather.sagas'\r\nimport themeSagas from './theme/theme.sagas'\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(weatherSagas), call(themeSagas)])\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport logger from 'redux-logger'\r\nimport { persistStore } from 'redux-persist'\r\n\r\nimport rootReducer from './root.reducer'\r\nimport rootSaga from './root.saga'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middlewares = [sagaMiddleware, logger]\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport const persistor = persistStore(store)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport CustomThemeProvider from './components/custom-theme-provider/custom-theme-provider'\r\n\r\nimport './index.scss'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport { store, persistor } from './redux/store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate persistor={persistor}>\r\n      <CustomThemeProvider>\r\n        <App />\r\n      </CustomThemeProvider>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}